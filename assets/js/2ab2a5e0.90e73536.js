"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[151],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||c;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,a=new Array(c);a[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:o,a[1]=i;for(var s=2;s<c;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9564:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const c={sidebar_position:4},a="Controllers",i={unversionedId:"concepts/building-blocks/controllers",id:"concepts/building-blocks/controllers",title:"Controllers",description:"AICA controllers are implemented according to the ros2_control standard.",source:"@site/docs/concepts/05-building-blocks/04-controllers.md",sourceDirName:"concepts/05-building-blocks",slug:"/concepts/building-blocks/controllers",permalink:"/docs/concepts/building-blocks/controllers",draft:!1,editUrl:"https://github.com/aica-technology/api/tree/main/docs/docs/concepts/05-building-blocks/04-controllers.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"conceptsSidebar",previous:{title:"Components",permalink:"/docs/concepts/building-blocks/components"},next:{title:"Hardware interfaces",permalink:"/docs/concepts/building-blocks/hardware-interfaces"}},l={},s=[],p={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"controllers"},"Controllers"),(0,o.kt)("p",null,"AICA controllers are implemented according to the ",(0,o.kt)("a",{parentName:"p",href:"/docs/concepts/ros-concepts/control"},"ros2_control")," standard."),(0,o.kt)("p",null,"The main extension that AICA controllers make is the definition of standard interfaces to communicate\nwith components and the Event Engine in a modular way. Controllers have parameters, inputs and outputs that can be\nconnected to components in the application, and expose predicates and transitions to drive application events."),(0,o.kt)("p",null,"Controllers are evaluated at fixed control intervals, defined by the rate of\nthe ",(0,o.kt)("a",{parentName:"p",href:"/docs/concepts/building-blocks/hardware-interfaces"},"hardware interface"),"."),(0,o.kt)("p",null,"AICA Core includes a number of controller implementation for joint-space and task-space control in position,\nvelocity or force, including force-sensitive impedance and admittance controllers."),(0,o.kt)("p",null,"AICA Core can also work with third-party controllers following the ",(0,o.kt)("inlineCode",{parentName:"p"},"ros2_control")," standard, but may have\nreduced compatibility with built-in component signal types and dynamically reconfigured parameters."))}u.isMDXComponent=!0}}]);