"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[329],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>f});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),p=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},l=function(e){var n=p(e.components);return o.createElement(s.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),m=p(t),u=r,f=m["".concat(s,".").concat(u)]||m[u]||d[u]||i;return t?o.createElement(f,c(c({ref:n},l),{},{components:t})):o.createElement(f,c({ref:n},l))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,c=new Array(i);c[0]=u;var a={};for(var s in n)hasOwnProperty.call(n,s)&&(a[s]=n[s]);a.originalType=e,a[m]="string"==typeof e?e:r,c[1]=a;for(var p=2;p<i;p++)c[p]=t[p];return o.createElement.apply(null,c)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},390:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var o=t(7462),r=(t(7294),t(3905));const i={sidebar_position:3},c="Dynamic composition",a={unversionedId:"concepts/ros-concepts/composition",id:"concepts/ros-concepts/composition",title:"Dynamic composition",description:"Traditionally, ROS nodes are compiled as executables so that they can be launched as stand-alone processes.",source:"@site/docs/concepts/03-ros-concepts/03-composition.md",sourceDirName:"concepts/03-ros-concepts",slug:"/concepts/ros-concepts/composition",permalink:"/api/docs/concepts/ros-concepts/composition",draft:!1,editUrl:"https://github.com/aica-technology/api/tree/main/docs/docs/concepts/03-ros-concepts/03-composition.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"conceptsSidebar",previous:{title:"Lifecycle nodes",permalink:"/api/docs/concepts/ros-concepts/lifecycle"},next:{title:"Controlling robots",permalink:"/api/docs/concepts/ros-concepts/control"}},s={},p=[],l={toc:p},m="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(m,(0,o.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"dynamic-composition"},"Dynamic composition"),(0,r.kt)("p",null,"Traditionally, ROS nodes are compiled as executables so that they can be launched as stand-alone processes.\nROS 2 ",(0,r.kt)("em",{parentName:"p"},"components")," are an extension to nodes that are compiled as shared libraries. Rather than being launched\ndirectly, components are dynamically loaded by other processes."),(0,r.kt)("p",null,"A component manager is a specialized container process that can load and unload components. By managing component\ninstances on demand, applications become more efficient but also more modular. The application and the network graph\nstructure become deploy-time and runtime decisions, rather than compile-time decisions."),(0,r.kt)("p",null,"Another key benefit of composition is the ability to execute multiple components in the same processing thread,\nwhich enables memory sharing and intra-process communication. Instead of a published message needing to be serialized,\npassed through a middleware communication layer and deserialized by a subscriber in a different process, intra-process\ncommunication allows publishers and subscribers in the same process can simply exchange messages as pointers to\nin-process memory. This configuration greatly reduces the computational burden compared and latency of messaging, which\nis significant when components are sending and receiving complex message packets at high frequencies (as is often\nthe case in sensor-driven robot control)."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Read more about composition\nin ",(0,r.kt)("a",{parentName:"p",href:"http://docs.ros.org/en/iron/Concepts/Intermediate/About-Composition.html"},"the official ROS 2 documentation"),".")))}d.isMDXComponent=!0}}]);