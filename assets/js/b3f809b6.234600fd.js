"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2161],{1983:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>f,contentTitle:()=>m,default:()=>x,frontMatter:()=>j,metadata:()=>r,toc:()=>y});const r=JSON.parse('{"id":"examples/guides/jtc-guide","title":"A guide on joint trajectory workflows","description":"In our concepts page for the Joint Trajectory Controller","source":"@site/docs/examples/guides/jtc-guide.md","sourceDirName":"examples/guides","slug":"/examples/guides/jtc-guide","permalink":"/docs/examples/guides/jtc-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/aica-technology/api/tree/main/docs/docs/examples/guides/jtc-guide.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"A guide on joint trajectory workflows"},"sidebar":"examplesSidebar","previous":{"title":"Application frames","permalink":"/docs/examples/guides/application-frames"},"next":{"title":"RealSense camera component","permalink":"/docs/examples/guides/realsense-component"}}');var o=t(4848),a=t(8453),i=t(5537),s=t(9329);const c=t.p+"assets/images/jtc-guide-hw-5dfe8ea46be053a3c912acf0b5b035e7.png",l=t.p+"assets/images/jtc-guide-parameters-2cea219d4e842e643b591b586a1f86fd.png",d=t.p+"assets/images/jtc-guide-record-frame-16b2edbd564a2e08d3def85cfd991cf4.gif",h=t.p+"assets/images/jtc-guide-create-frame-e5006f96c6e72aeb8f37daa01e57bd95.gif",u=t.p+"assets/images/jtc-guide-record-joint-d2b9b6d332a11c89222b1a0b4a17cbab.gif",p=t.p+"assets/images/jtc-guide-final-app-78a1ec80da1bcfdd3e0eccf4c95633e1.gif",j={sidebar_position:5,title:"A guide on joint trajectory workflows"},m="A guide on joint trajectory workflows",f={},y=[{value:"Setting up your environment",id:"setting-up-your-environment",level:2},{value:"Configuring your hardware interface",id:"configuring-your-hardware-interface",level:2},{value:"Parametrizing JTC",id:"parametrizing-jtc",level:3},{value:"Setting a trajectory for execution",id:"setting-a-trajectory-for-execution",level:2},{value:"Trajectory execution status",id:"trajectory-execution-status",level:3},{value:"Using JTC with signals",id:"using-jtc-with-signals",level:3},{value:"Using JTC&#39;s <code>Set trajectory</code> service",id:"using-jtcs-set-trajectory-service",level:3},{value:"Putting an application together",id:"putting-an-application-together",level:2},{value:"Recording frames and joint positions",id:"recording-frames-and-joint-positions",level:3},{value:"Create a frame from scratch",id:"create-a-frame-from-scratch",level:4},{value:"Record a frame: Create a frame from an existing one",id:"record-a-frame-create-a-frame-from-an-existing-one",level:4},{value:"Record joint positions",id:"record-joint-positions",level:4},{value:"Building an application around JTC",id:"building-an-application-around-jtc",level:3},{value:"Loop logic",id:"loop-logic",level:4},{value:"Other considerations",id:"other-considerations",level:4},{value:"Final application",id:"final-application",level:4}];function g(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"a-guide-on-joint-trajectory-workflows",children:"A guide on joint trajectory workflows"})}),"\n",(0,o.jsxs)(n.p,{children:["In our concepts page for the ",(0,o.jsx)(n.a,{href:"/docs/concepts/building-blocks/controllers/jtc",children:"Joint Trajectory Controller"}),"\n(JTC) we already covered why trajectory controllers are often needed in robotics. In short, executing trajectories,\nin joint or Cartesian space, is often a fundamental piece of a robotics application workflow. Whether you need to\naddress pick and place tasks, or simply move through predetermined locations, you are in need of a controller that is\nable to traverse space accurately and timely."]}),"\n",(0,o.jsxs)(n.p,{children:["While we cover the basics of JTC in ",(0,o.jsx)(n.a,{href:"/docs/examples/core-controllers/jtc-example",children:"a separate example"}),", here we will focus more\non its integration with AICA Studio and suggest workflows and/or parametrizations that might aid you when building big\napplications."]}),"\n",(0,o.jsxs)(n.admonition,{type:"tip",children:[(0,o.jsx)(n.p,{children:"Visit our learning platform AICAdemy for an interactive training module with a real robot on this topic:"}),(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://aica.thinkific.com/courses/trajectory-control-on-industrial-manipulators-m41",children:"Trajectory Control on Industrial Manipulators"})})]}),"\n",(0,o.jsx)(n.h2,{id:"setting-up-your-environment",children:"Setting up your environment"}),"\n",(0,o.jsx)(n.p,{children:"JTC has a plethora of parameters that can be set to alter its performance according to an application's requirements.\nLet us start by creating a new application that we can use as a reference point for this guide."}),"\n",(0,o.jsxs)(n.p,{children:["First, start AICA Launcher and create a configuration with ",(0,o.jsx)(n.strong,{children:"AICA Core v4.4.2"})," or higher. For the remainder of this\nguide, we will be using the generic six-axis robot that is part of our core hardware collection. However, if you have\nthe appropriate entitlements and want to experiment with a different robot brand, feel free to add the corresponding\ncollection to your configuration before launching it."]}),"\n",(0,o.jsx)(n.h2,{id:"configuring-your-hardware-interface",children:"Configuring your hardware interface"}),"\n",(0,o.jsx)(n.p,{children:"Create a new application and:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Open the settings menu of the hardware interface and set the URDF to ",(0,o.jsx)(n.code,{children:"Generic six-axis robot arm"}),", then\nproceed to close this menu."]}),"\n",(0,o.jsxs)(n.li,{children:["Add a ",(0,o.jsx)(n.code,{children:"Joint Trajectory Controller"})," to the hardware interface and set it to:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"auto-load"}),"\n",(0,o.jsx)(n.li,{children:"auto-activate"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.li,{children:"Connect the start block to the hardware interface to load it on start."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Your application should look like this:"}),"\n",(0,o.jsx)("div",{class:"text--center",children:(0,o.jsx)("img",{src:c,alt:"Hardware block with JTC"})}),"\n",(0,o.jsx)(n.h3,{id:"parametrizing-jtc",children:"Parametrizing JTC"}),"\n",(0,o.jsxs)(n.p,{children:["Click on the small gear icon on the ",(0,o.jsx)(n.code,{children:"Joint Trajectory Controller"})," block we just added to view and edit the available\nparameters."]}),"\n",(0,o.jsx)("div",{class:"text--center",children:(0,o.jsx)("img",{src:l,alt:"Basic JTC parameters"})}),"\n",(0,o.jsx)(n.p,{children:"Let us cover some of these parameters:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Command interfaces"}),": that refers to the type of command that JTC will use to control your robot; one of position,\nvelocity, acceleration, or effort."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"State interfaces"}),": the type of state interfaces JTC will claim. Some interfaces may be necessary depending on your\nchoice of command interfaces. For example, if you want to control your robot in acceleration, you need to have a\nvelocity state interface."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Open loop control"}),": refers to whether the controller will be correcting its desired commands according to the state\nit is receiving or not."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Allow nonzero velocity at trajectory end"}),": typically, you want the robot to halt when it reaches the end of your\ntrajectory. However, there are cases, e.g., when you are controlling in velocities, where you want to allow non-zero\nvalues even if the trajectory waypoints have been successfully traversed."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Proportional/Integral/Derivative gain(s)"}),": these gains are to be set and tuned when you are, for example, commanding\nin velocity but your trajectory has positions. Then, a PID control will be applied to generate desired velocities\nthrough the trajectory."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"You will also notice tolerance values for trajectory execution times and position offsets. These should be set on a\nper-application basis, as failing to satisfy the corresponding constraints would lead to the trajectory failing\nmid-execution."}),"\n",(0,o.jsxs)(n.p,{children:["You may find advanced parameters in the ",(0,o.jsx)(n.code,{children:"Docs"})," tab under the ",(0,o.jsx)(n.code,{children:"Joint Trajectory Controller"})," page. These parameters can be\nused to further tune JTC's performance and functionality, but may also require more advanced knowledge in order to tune\nthem. Make sure to carefully read the descriptions next to each parameter before making changes."]}),"\n",(0,o.jsx)(n.h2,{id:"setting-a-trajectory-for-execution",children:"Setting a trajectory for execution"}),"\n",(0,o.jsx)(n.p,{children:"There are 2 ways of setting a trajectory in JTC:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["by using a ",(0,o.jsx)(n.code,{children:"JointTrajectory"})," signal"]}),"\n",(0,o.jsxs)(n.li,{children:["by calling the ",(0,o.jsx)(n.code,{children:"set_trajectory"})," service"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["In both cases, receiving a new joint trajectory will first trigger cancellation of an active trajectory, if there is\none. That is, ",(0,o.jsx)(n.strong,{children:"there is no trajectory buffering or appending taking place"}),". As with many things in the AICA Universe,\nbehaviors are event-driven. If you wish to send multiple trajectories back-to-back, you will have to rely on the\nexecution status of the active trajectory handled by JTC. There is a practical example of how do this in following\nsections (see ",(0,o.jsx)(n.a,{href:"#putting-an-application-together",children:"Putting an application together"}),")."]}),"\n",(0,o.jsx)(n.h3,{id:"trajectory-execution-status",children:"Trajectory execution status"}),"\n",(0,o.jsx)(n.p,{children:"The controller exposes 4 predicates to reflect the the execution status of a trajectory, namely:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Has active trajectory"}),": A trajectory has been set and is being executed"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Has trajectory succeeded"}),": A trajectory was executed successfully (i.e., reached the final waypoint within all\ntolerances)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Has trajectory failed"}),": A trajectory failed to execute because a tolerance was violated (i.e., desired waypoint was\nnot reached and/or time duration was exceeded)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Is trajectory cancelled"}),": A user-triggered request to cancel the trajectory was successfully processed"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"using-jtc-with-signals",children:"Using JTC with signals"}),"\n",(0,o.jsxs)(n.p,{children:["In practice, this requires publishing a single\n",(0,o.jsx)(n.a,{href:"https://docs.ros.org/en/noetic/api/trajectory_msgs/html/msg/JointTrajectory.html",children:(0,o.jsx)(n.code,{children:"JointTrajectory"})})," message. In AICA\nStudio terms, that means connecting an edge from a custom component directly to the input of JTC. If you already have a\ncomponent that has the corresponding signal output, feel free to skip the next segment."]}),"\n",(0,o.jsx)(n.p,{children:"If you are writing the signal logic yourself, the following code indicates what your message-related code may look like:"}),"\n",(0,o.jsxs)(i.A,{groupId:"programming-language",children:[(0,o.jsx)(s.A,{value:"python",label:"Python",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",metastring:'title="py_component.py"',children:"import rclpy\nfrom trajectory_msgs.msg import JointTrajectory, JointTrajectoryPoint\n\n# Typically in your constructor\nself._trajectory = JointTrajectory()\nself.add_output(\"trajectory\", \"_trajectory\", JointTrajectory, publish_on_step=False)\n\n# Typically in a conditional block that will write the output upon the success of some criteria\nself._trajectory.header.stamp = self.get_clock().now().to_msg()\nself._trajectory.joint_names = ['joint_0', 'joint_1', 'joint_2', 'joint_3', 'joint_4', 'joint_5']\n\np1 = JointTrajectoryPoint()\np1.positions = [0.6, 0.2, 0.0, 0.0, -0.2, 0.0]\np1.velocities = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\np1.time_from_start = rclpy.time.Duration(seconds=2.0).to_msg()\n\np2 = JointTrajectoryPoint()\np2.positions = [-0.6, -0.2, 0.0, 0.0, 0.2, 0.0]\np2.velocities = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\np2.time_from_start = rclpy.time.Duration(seconds=4.0).to_msg()\n\nself._trajectory.points = [p1, p2]\n\nself.publish_output(\"trajectory\")\n"})})}),(0,o.jsxs)(s.A,{value:"c++",label:"C++",children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="include/custom_component_package/CppComponent.hpp"',children:"#pragma once\n\n#include <trajectory_msgs/msg/joint_trajectory.hpp>\n#include <trajectory_msgs/msg/joint_trajectory_point.hpp>\n\n// typically in your header, define a member variable for the trajectory\nstd::shared_ptr<trajectory_msgs::msg::JointTrajectory> trajectory_;\n"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="src/CppComponent.cpp"',children:'#include "custom_component_package/CppComponent.hpp"\n\n// Typically in your constructor\nthis->trajectory_ = std::make_shared<trajectory_msgs::msg::JointTrajectory>();\nthis->add_output("trajectory", this->trajectory_, "", false, false);\n\n// Typically in a conditional block that will write the output upon the success of some criteria\nthis->trajectory_->header.stamp = this->get_node()->get_clock()->now();\nthis->trajectory_->joint_names = {"joint_0", "joint_1", "joint_2", "joint_3", "joint_4", "joint_5"};\nthis->trajectory_->points.resize(2);\n\nthis->trajectory_->points[0].positions = {0.6, 0.2, 0.0, 0.0, -0.2, 0.0};\nthis->trajectory_->points[0].velocities = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\nthis->trajectory_->points[0].time_from_start = rclcpp::Duration::from_seconds(2.0);\n\nthis->trajectory_->points[1].positions = {-0.6, -0.2, 0.0, 0.0, 0.2, 0.0};\nthis->trajectory_->points[1].velocities = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\nthis->trajectory_->points[1].time_from_start = rclcpp::Duration::from_seconds(4.0);\n\nthis->publish_output("trajectory");\n'})})]})]}),"\n",(0,o.jsxs)(n.admonition,{type:"note",children:[(0,o.jsxs)(n.p,{children:["The joint names need to correspond to the joint names from your URDF. If you are ",(0,o.jsx)(n.strong,{children:"not"}),"\nusing the ",(0,o.jsx)(n.code,{children:"Generic six-axis robot arm"}),", you will need to adjust these names."]}),(0,o.jsxs)(n.p,{children:["The easiest way to do so if you do not already know them is to head to the ",(0,o.jsx)(n.code,{children:"Hardware"})," menu of your AICA Launcher and\nread through your URDF."]})]}),"\n",(0,o.jsxs)(n.h3,{id:"using-jtcs-set-trajectory-service",children:["Using JTC's ",(0,o.jsx)(n.code,{children:"Set trajectory"})," service"]}),"\n",(0,o.jsx)(n.p,{children:"The service currently accepts 6 variables, namely:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"times_from_start"}),": a list of timestamps (in seconds) measured from the start, indicating when JTC should reach each\nframe."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"durations"}),": a list of absolute durations (in seconds) that correspond to each waypoint."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"frames"}),": names of the Cartesian frames to reach with the robot end effector."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"joint_positions"}),": names of joint positions that the robot should achieve."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"blending_factors"}),": factors in [0.0, 1.0] indicating the amount of curving allowed between 2 consecutive waypoints.\nThe default blending factors are all set to 0.0. The last trajectory segment is not considered in blending, therefore,\nthe vector's size needs to be equal to the number of frames or joint positions ",(0,o.jsx)(n.strong,{children:"minus"})," 1 or simply contain a single\nvalue to be applied to all waypoints that support blending."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"blending_samples"}),": the number of samples ",(0,o.jsx)(n.strong,{children:"(minimum 10; default 50)"})," to be used when generating the blended\ntrajectory. If you find that your blended trajectory is not smooth enough, consider increasing this number."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["The payload can only contain one of ",(0,o.jsx)(n.code,{children:"frames"})," and ",(0,o.jsx)(n.code,{children:"joint_positions"})," and either ",(0,o.jsx)(n.code,{children:"times_from_start"})," or ",(0,o.jsx)(n.code,{children:"durations"}),".\nWhen ",(0,o.jsx)(n.code,{children:"frames"})," are provided, an Inverse Kinematics (IK) solver will compute the joint positions that the robot should\nreach. In the case of ",(0,o.jsx)(n.code,{children:"joint_positions"}),", the recorded joint configurations are directly used in the joint trajectory."]}),"\n",(0,o.jsxs)(n.p,{children:["When using ",(0,o.jsx)(n.code,{children:"times_from_start"}),", the length of ",(0,o.jsx)(n.code,{children:"frames"})," or ",(0,o.jsx)(n.code,{children:"joint_positions"})," need to be equal to the times provided and\neach value corresponds to exactly one waypoint. Similarly, ",(0,o.jsx)(n.code,{children:"durations"})," can have the same length as your waypoints vector,\nor be expressed as a single-element vector whose value will be applied to all waypoints."]}),"\n",(0,o.jsx)(n.p,{children:"For example, you could use:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"{\n  frames: [start, frame_1, frame_2, frame_3, start], \n  durations: [2.0, 1.5, 2.5, 1.75, 1.5]\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"or"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"{\n  joint_positions: [start, jconfig_1, jconfig_2, jconfig_3, start], \n  durations: [2.0, 1.5, 2.5, 1.75, 1.5]\n}\n"})}),"\n",(0,o.jsxs)(n.admonition,{type:"tip",children:[(0,o.jsx)(n.p,{children:"The above payloads can also be written as:"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"{\n  frames: [start, frame_1, frame_2, frame_3, start], \n  times_from_start: [2.0, 3.5, 6.0, 7.75, 9.25]\n}\n"})}),(0,o.jsx)(n.p,{children:"or"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"{\n  joint_positions: [start, jconfig_1, jconfig_2, jconfig_3, start], \n  times_from_start: [2.0, 3.5, 6.0, 7.75, 9.25]\n}\n"})})]}),"\n",(0,o.jsxs)(n.p,{children:["In the following section, we will demonstrate how these frames or joint positions can be easily recorded through the\n",(0,o.jsx)(n.code,{children:"3D Viz"})," and used with JTC in a matter of clicks."]}),"\n",(0,o.jsx)(n.h2,{id:"putting-an-application-together",children:"Putting an application together"}),"\n",(0,o.jsxs)(n.p,{children:["Let us now go back to the application we created earlier in the guide, that consists of a hardware interface with the\n",(0,o.jsx)(n.code,{children:"Generic six-axis robot arm"})," and a ",(0,o.jsx)(n.code,{children:"Joint Trajectory Controller"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"recording-frames-and-joint-positions",children:"Recording frames and joint positions"}),"\n",(0,o.jsxs)(n.admonition,{type:"info",children:[(0,o.jsx)(n.mdxAdmonitionTitle,{}),(0,o.jsxs)(n.p,{children:["A dedicated example on recording application frames can be found ",(0,o.jsx)(n.a,{href:"/docs/examples/guides/application-frames",children:"here"}),"."]})]}),"\n",(0,o.jsx)(n.h4,{id:"create-a-frame-from-scratch",children:"Create a frame from scratch"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Play the application and click on the ",(0,o.jsx)(n.code,{children:"3D Viz"})," button. On the top-left corner you will see various visualization\noptions."]}),"\n",(0,o.jsxs)(n.li,{children:["Expand the ",(0,o.jsx)(n.code,{children:"Create frame"})," option and give the name ",(0,o.jsx)(n.code,{children:"frame_1"})," before pressing ",(0,o.jsx)(n.code,{children:"Create"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["A frame will appear close to the origin of the map. You can click on the axes of the frame and drag it anywhere in\nthe scene. Also, mind that this is a desired tool for your robot's end effector, therefore, you likely have to rotate it\naccordingly such that it's reachable both in terms of distance and orientation. You may also expand the ",(0,o.jsx)(n.code,{children:"View settings"}),"\nand toggle on ",(0,o.jsx)(n.code,{children:"Show frames"}),", as this will provide a visual reference about the orientation of the end effector. For\nexample:"]}),"\n"]}),"\n",(0,o.jsx)("div",{class:"text--center",children:(0,o.jsx)("img",{src:h,alt:"Creating a frame in AICA Studio"})}),"\n",(0,o.jsxs)(n.p,{children:["Open your YAML editor and notice that there is now a ",(0,o.jsx)(n.code,{children:"frames"})," section with your recorded frame, for example:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"frames:\n  frame_1:\n    reference_frame: world\n    position:\n      x: 0.468317\n      y: -0.116919\n      z: 0.422861\n    orientation:\n      w: 0.057171\n      x: 0.64853\n      y: 0.75827\n      z: 0.034142\n"})}),"\n",(0,o.jsx)(n.h4,{id:"record-a-frame-create-a-frame-from-an-existing-one",children:"Record a frame: Create a frame from an existing one"}),"\n",(0,o.jsx)(n.p,{children:"Alternatively, you can record a frame directly on the robot's end effector and then proceed to move it (in which case\nthe orientation is copied from the end effector), as shown below:"}),"\n",(0,o.jsx)("div",{class:"text--center",children:(0,o.jsx)("img",{src:d,alt:"Recording a frame in AICA Studio"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"frames:\n  frame_1:\n    reference_frame: world\n    position:\n      x: 0.493899\n      y: 0.140303\n      z: 0.429977\n    orientation:\n      w: -0.000563\n      x: 0.707388\n      y: 0.706825\n      z: 0.000001\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You may also try the inverse, that is, copy one of the above code blocks, paste it at the top-level scope of your YAML\napplication, and generate the graph. If you switch back to ",(0,o.jsx)(n.code,{children:"3D Viz"})," you should see the same frame as depicted in the\nabove image."]}),"\n",(0,o.jsx)(n.h4,{id:"record-joint-positions",children:"Record joint positions"}),"\n",(0,o.jsx)(n.p,{children:"Let us also record the initial position of the robot as a joint position. Press play if you have not already, but this\ntime record joint positions instead of creating a frame:"}),"\n",(0,o.jsx)("div",{class:"text--center",children:(0,o.jsx)("img",{src:u,alt:"Recording a joint in AICA Studio"})}),"\n",(0,o.jsxs)(n.p,{children:["Back in your YAML editor you will see yet another new block named ",(0,o.jsx)(n.code,{children:"joint_positions"})," below your ",(0,o.jsx)(n.code,{children:"frames"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"joint_positions:\n  jconfig_1:\n    positions:\n      - 0\n      - 0\n      - 0\n      - 0\n      - 0\n      - 0\n    joint_names:\n      - joint_0\n      - joint_1\n      - joint_2\n      - joint_3\n      - joint_4\n      - joint_5\n"})}),"\n",(0,o.jsx)(n.h3,{id:"building-an-application-around-jtc",children:"Building an application around JTC"}),"\n",(0,o.jsx)(n.p,{children:"You should now have at least 2 recordings, one in Cartesian and the other in joint space. We can use these to create a\nrepetitive motion between them."}),"\n",(0,o.jsx)(n.h4,{id:"loop-logic",children:"Loop logic"}),"\n",(0,o.jsx)(n.p,{children:"To loop the execution of the recorded frames and/or joint positions, we need a sequence block that:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Sets"})," the trajectory by using the Cartesian frame"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Waits"})," indefinitely for the ",(0,o.jsx)(n.code,{children:"Has trajectory succeeded"})," predicate to become true"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Sets"})," the trajectory by using the joint position"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Waits"})," indefinitely for the ",(0,o.jsx)(n.code,{children:"Has trajectory succeeded"})," predicate to become true"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Auto-loops"})," the sequence by enabling the corresponding toggle on the sequence block"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Take a moment and try to create this sequence."}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsx)(n.p,{children:"Your sequence block needs to be started after JTC has been activated, otherwise your service call will fail. Try\nto ensure that before looking at the solution."})}),"\n",(0,o.jsxs)(n.admonition,{type:"tip",children:[(0,o.jsxs)(n.p,{children:["You may re-play your program by using ",(0,o.jsx)(n.code,{children:"blending_factors"})," this time. Your payloads could now be the following:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"{\n  frames: [start, frame_1, frame_2, frame_3, stop], \n  durations: [2.0],\n  blending_factors: [0.5]\n}\n"})}),(0,o.jsx)(n.p,{children:"or"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"{\n  joint_positions: [start, jconfig_1, jconfig_2, jconfig_3, stop], \n  durations: [2.0],\n  blending_factors: [0.5]\n}\n"})}),(0,o.jsx)(n.p,{children:"Experiment with these values to observe the difference in the resulting trajectory. Note that, you will need at least\n2 waypoints for blending to take effect, otherwise the robot will simply move in a straight-line motion. Note that if\nthe first waypoint is identical to the robot's current configuration, this would also result in a straight-line motion\nto the final waypoint even though blending is in effect. If you need to, go to 3D Viz and record some additional frames.\nYou can also try to apply different blending values for each waypoint to compare the difference in smoothness."})]}),"\n",(0,o.jsx)(n.h4,{id:"other-considerations",children:"Other considerations"}),"\n",(0,o.jsx)(n.p,{children:"Since the sequence will loop indefinitely, you will initially be able to stop the robot from moving only by stopping the\napplication."}),"\n",(0,o.jsxs)(n.p,{children:["As an exercise, try to use a trigger button and the ",(0,o.jsx)(n.code,{children:"Is trajectory cancelled"})," predicate to drive the application or\nsequence to stop."]}),"\n",(0,o.jsx)(n.h4,{id:"final-application",children:"Final application"}),"\n",(0,o.jsx)(n.p,{children:"Your final application may look something like the following:"}),"\n",(0,o.jsx)("div",{class:"text--center",children:(0,o.jsx)("img",{src:p,alt:"Final JTC application with looping logic"})}),"\n",(0,o.jsx)(n.p,{children:"If your application appears different, there is no cause for concern. There are multiple valid ways to achieve the same\nresult. You may compare your final application to the one shown above using the YAML application provided below."}),"\n",(0,o.jsxs)(t,{children:[(0,o.jsx)("summary",{children:"Advanced JTC application example"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"schema: 2-0-4\ndependencies:\n  core: v4.4.2\nframes:\n  frame_1:\n    reference_frame: world\n    position:\n      x: 0.493899\n      y: 0.140303\n      z: 0.429977\n    orientation:\n      w: -0.000563\n      x: 0.707388\n      y: 0.706825\n      z: 0.000001\njoint_positions:\n  jconfig_1:\n    positions:\n      - 0\n      - 0\n      - 0\n      - 0\n      - 0\n      - 0\n    joint_names:\n      - joint_0\n      - joint_1\n      - joint_2\n      - joint_3\n      - joint_4\n      - joint_5\non_start:\n  load:\n    hardware: hardware\nsequences:\n  sequence:\n    display_name: Sequence\n    loop: true\n    steps:\n      - call_service:\n          controller: joint_trajectory_controller\n          hardware: hardware\n          service: set_trajectory\n          payload: |-\n            {\n              frames: [frame_1],\n              durations: [1.5]\n            }\n      - check:\n          condition:\n            controller: joint_trajectory_controller\n            hardware: hardware\n            predicate: has_trajectory_succeeded\n          wait_forever: true\n      - call_service:\n          controller: joint_trajectory_controller\n          hardware: hardware\n          service: set_trajectory\n          payload: |-\n            {\n              joint_positions: [jconfig_1],\n              durations: [1.5]\n            }\n      - check:\n          condition:\n            controller: joint_trajectory_controller\n            hardware: hardware\n            predicate: has_trajectory_succeeded\n          wait_forever: true\nhardware:\n  hardware:\n    display_name: Hardware Interface\n    urdf: Generic six-axis robot arm\n    rate: 100\n    events:\n      transitions:\n        on_load:\n          load:\n            - controller: robot_state_broadcaster\n              hardware: hardware\n            - controller: joint_trajectory_controller\n              hardware: hardware\n    controllers:\n      robot_state_broadcaster:\n        plugin: aica_core_controllers/RobotStateBroadcaster\n        events:\n          transitions:\n            on_load:\n              switch_controllers:\n                hardware: hardware\n                activate: robot_state_broadcaster\n      joint_trajectory_controller:\n        plugin: aica_core_controllers/trajectory/JointTrajectoryController\n        events:\n          transitions:\n            on_load:\n              switch_controllers:\n                hardware: hardware\n                activate: joint_trajectory_controller\n            on_activate:\n              sequence:\n                start: sequence\n          predicates:\n            is_trajectory_cancelled:\n              sequence:\n                abort: sequence\n            has_trajectory_failed:\n              application: stop\ngraph:\n  positions:\n    on_start:\n      x: -60\n      y: 0\n    stop:\n      x: -60\n      y: 120\n    buttons:\n      button:\n        x: -360\n        y: 1080\n    hardware:\n      hardware:\n        x: 500\n        y: -20\n    sequences:\n      sequence:\n        x: -560\n        y: 560\n  buttons:\n    button:\n      display_name: Cancel trajectory and stop sequence\n      on_click:\n        call_service:\n          controller: joint_trajectory_controller\n          hardware: hardware\n          service: cancel_active_trajectory\n  edges:\n    hardware_hardware_joint_trajectory_controller_has_trajectory_succeeded_sequence_sequence_condition_input_1:\n      path:\n        - x: 460\n          y: 820\n        - x: 460\n          y: 700\n        - x: -100\n          y: 700\n    hardware_hardware_joint_trajectory_controller_has_trajectory_succeeded_sequence_sequence_condition_input_3:\n      path:\n        - x: 60\n          y: 820\n    hardware_hardware_joint_trajectory_controller_on_activate_sequence_sequence:\n      path:\n        - x: 160\n          y: 740\n        - x: 160\n          y: 560\n        - x: -580\n          y: 560\n        - x: -580\n          y: 620\n    hardware_joint_trajectory_controller_has_trajectory_succeeded_condition_sequence_sequence_condition_input_1:\n      path:\n        - x: -360\n          y: 820\n    hardware_joint_trajectory_controller_has_trajectory_succeeded_condition_sequence_sequence_condition_input_3:\n      path:\n        - x: -40\n          y: 820\n    hardware_hardware_joint_trajectory_controller_is_trajectory_cancelled_sequence_sequence:\n      path:\n        - x: 220\n          y: 900\n        - x: 220\n          y: 540\n        - x: -600\n          y: 540\n        - x: -600\n          y: 620\n    hardware_hardware_joint_trajectory_controller_has_trajectory_failed_on_stop_on_stop:\n      path:\n        - x: 460\n          y: 860\n        - x: 460\n          y: 240\n        - x: -80\n          y: 240\n        - x: -80\n          y: 160\n    sequence_sequence_event_trigger_0_hardware_hardware_joint_trajectory_controller_set_trajectory:\n      path:\n        - x: -520\n          y: 980\n    sequence_sequence_event_trigger_2_hardware_hardware_joint_trajectory_controller_set_trajectory:\n      path:\n        - x: -200\n          y: 980\n    button_on_click_hardware_hardware_joint_trajectory_controller_cancel_active_trajectory:\n      path:\n        - x: 220\n          y: 1100\n        - x: 220\n          y: 1020\n"})})]})]})}function x(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}},5537:(e,n,t)=>{t.d(n,{A:()=>b});var r=t(6540),o=t(8215),a=t(5627),i=t(6347),s=t(372),c=t(604),l=t(1861),d=t(8749);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:o}}=e;return{value:n,label:t,attributes:r,default:o}}))}(t);return function(e){const n=(0,l.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function j(e){let{queryString:n=!1,groupId:t}=e;const o=(0,i.W6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c.aZ)(a),(0,r.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(o.location.search);n.set(a,e),o.replace({...o.location,search:n.toString()})}),[a,o])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:o}=e,a=u(e),[i,c]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:a}))),[l,h]=j({queryString:t,groupId:o}),[m,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[o,a]=(0,d.Dv)(t);return[o,(0,r.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:o}),y=(()=>{const e=l??m;return p({value:e,tabValues:a})?e:null})();(0,s.A)((()=>{y&&c(y)}),[y]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);c(e),h(e),f(e)}),[h,f,a]),tabValues:a}}var f=t(9136);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=t(4848);function x(e){let{className:n,block:t,selectedValue:r,selectValue:i,tabValues:s}=e;const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,a.a_)(),d=e=>{const n=e.currentTarget,t=c.indexOf(n),o=s[t].value;o!==r&&(l(n),i(o))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},n),children:s.map((e=>{let{value:n,label:t,attributes:a}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{c.push(e)},onKeyDown:h,onClick:d,...a,className:(0,o.A)("tabs__item",y.tabItem,a?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function _(e){let{lazy:n,children:t,selectedValue:a}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function w(e){const n=m(e);return(0,g.jsxs)("div",{className:(0,o.A)("tabs-container",y.tabList),children:[(0,g.jsx)(x,{...n,...e}),(0,g.jsx)(_,{...n,...e})]})}function b(e){const n=(0,f.A)();return(0,g.jsx)(w,{...e,children:h(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var r=t(6540);const o={},a=r.createContext(o);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(a.Provider,{value:n},e.children)}},9329:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var r=t(8215);const o={tabItem:"tabItem_Ymn6"};var a=t(4848);function i(e){let{children:n,hidden:t,className:i}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,i),hidden:t,children:n})}}}]);