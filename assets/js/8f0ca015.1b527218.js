"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[895],{3147:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"concepts/ros-concepts/lifecycle-nodes","title":"Lifecycle nodes","description":"Lifecycle nodes, also referred to as \\"managed\\" nodes, extend the common interfaces of regular nodes with an internal","source":"@site/docs/concepts/ros-concepts/lifecycle-nodes.md","sourceDirName":"concepts/ros-concepts","slug":"/concepts/ros-concepts/lifecycle-nodes","permalink":"/docs/concepts/ros-concepts/lifecycle-nodes","draft":false,"unlisted":false,"editUrl":"https://github.com/aica-technology/api/tree/main/docs/docs/concepts/ros-concepts/lifecycle-nodes.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Lifecycle nodes"},"sidebar":"conceptsSidebar","previous":{"title":"Nodes","permalink":"/docs/concepts/ros-concepts/nodes"},"next":{"title":"Dynamic composition","permalink":"/docs/concepts/ros-concepts/dynamic-composition"}}');var s=t(4848),i=t(8453);const c={sidebar_position:3,title:"Lifecycle nodes"},r="Lifecycle nodes",a={},l=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"lifecycle-nodes",children:"Lifecycle nodes"})}),"\n",(0,s.jsxs)(n.p,{children:['Lifecycle nodes, also referred to as "managed" nodes, ',(0,s.jsx)(n.strong,{children:"extend the common interfaces of regular nodes"})," with an internal\nstate machine following the concept of ",(0,s.jsx)(n.em,{children:"lifecycle states"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Nodes are normally launched as a collection of processes based on a launch configuration file. In complex applications,\nit may not be desirable for all node processes to start executing right away. For example, a computer vision processing\nnode should not perform any calculations until a camera sensor node is ready."}),"\n",(0,s.jsxs)(n.p,{children:["Lifecycle nodes present a solution to this problem by distinguishing between different activation states. ",(0,s.jsx)(n.strong,{children:"Developers can\nthen implement different node behaviors depending on the current internal state."})]}),"\n",(0,s.jsx)(n.p,{children:"A lifecycle node has four primary states:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Unconfigured"}),"\n",(0,s.jsx)(n.li,{children:"Inactive"}),"\n",(0,s.jsx)(n.li,{children:"Active"}),"\n",(0,s.jsx)(n.li,{children:"Finalized"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"There are seven primary transitions between the states:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Create"}),"\n",(0,s.jsx)(n.li,{children:"Configure"}),"\n",(0,s.jsx)(n.li,{children:"Activate"}),"\n",(0,s.jsx)(n.li,{children:"Deactivate"}),"\n",(0,s.jsx)(n.li,{children:"Cleanup"}),"\n",(0,s.jsx)(n.li,{children:"Shutdown"}),"\n",(0,s.jsx)(n.li,{children:"Destroy"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["A lifecycle node is a managed node because the transitions between primary lifecycle states are normally triggered by an\nexternal process. In other words, a lifecycle node in the inactive state stays inactive until an external process (for\nexample, another node) requests a transition (for example, from inactive to active using the ",(0,s.jsx)(n.code,{children:"activate"})," transition)."]}),"\n",(0,s.jsxs)(n.p,{children:["Another key benefit of lifecycle nodes is the ability to ",(0,s.jsx)(n.strong,{children:"build sophisticated error handling and recovery behavior"}),". An\nerror can be handled differently depending on the current state or transition. Instead of the node crashing and shutting\ndown completely, a properly handled error can recover the lifecycle node to an unconfigured state."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Read more about managed nodes in ",(0,s.jsx)(n.a,{href:"https://design.ros2.org/articles/node_lifecycle.html",children:"the ROS 2 design document"}),"."]})}),"\n",(0,s.jsx)(n.p,{children:"Using lifecycle nodes is one way to dynamically manage the behavior of an application at runtime. Another approach is\nto use dynamic composition, which is described on the next page."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var o=t(6540);const s={},i=o.createContext(s);function c(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);