"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[176],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>g});var o=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=o.createContext({}),s=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},m=function(e){var n=s(e.components);return o.createElement(p.Provider,{value:n},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,m=r(e,["components","mdxType","originalType","parentName"]),l=s(t),u=a,g=l["".concat(p,".").concat(u)]||l[u]||d[u]||i;return t?o.createElement(g,c(c({ref:n},m),{},{components:t})):o.createElement(g,c({ref:n},m))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,c=new Array(i);c[0]=u;var r={};for(var p in n)hasOwnProperty.call(n,p)&&(r[p]=n[p]);r.originalType=e,r[l]="string"==typeof e?e:a,c[1]=r;for(var s=2;s<i;s++)c[s]=t[s];return o.createElement.apply(null,c)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3763:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>s});var o=t(7462),a=(t(7294),t(3905));const i={sidebar_position:1},c="Creating a component package",r={unversionedId:"reference/custom-components/component-package",id:"reference/custom-components/component-package",title:"Creating a component package",description:"The creation of a component package can be greatly simplified by using",source:"@site/docs/reference/custom-components/01-component-package.md",sourceDirName:"reference/custom-components",slug:"/reference/custom-components/component-package",permalink:"/docs/reference/custom-components/component-package",draft:!1,editUrl:"https://github.com/aica-technology/api/tree/main/docs/docs/reference/custom-components/01-component-package.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"programmingReferenceSidebar",previous:{title:"Custom components",permalink:"/docs/category/custom-components"},next:{title:"Writing a component",permalink:"/docs/reference/custom-components/custom-component"}},p={},s=[{value:"Package infrastructure",id:"package-infrastructure",level:2},{value:"package.xml",id:"packagexml",level:3},{value:"CMakeLists.txt",id:"cmakeliststxt",level:3},{value:"setup.cfg",id:"setupcfg",level:3},{value:"Source directories",id:"source-directories",level:3},{value:"Component descriptions",id:"component-descriptions",level:3}],m={toc:s},l="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(l,(0,o.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"creating-a-component-package"},"Creating a component package"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The creation of a component package can be greatly simplified by using\nour ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/aica-technology/component-template"},"Component Template"),". It comes with a boilerplate project\nwhich supports both C++ and Python."),(0,a.kt)("p",{parentName:"admonition"},"A lot of the information in this page is also available in the README of the template repository.")),(0,a.kt)("p",null,"Custom components can be defined in ROS 2 packages and used alongside the standard library of AICA components in AICA Core. Components can be implemented in C++ or Python. A component package can contain multiple\ncomponents in either language."),(0,a.kt)("h2",{id:"package-infrastructure"},"Package infrastructure"),(0,a.kt)("p",null,"A minimal directory structure for an example package named ",(0,a.kt)("inlineCode",{parentName:"p"},"custom_component_package")," with C++ and Python component\nimplementations is shown below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"custom_component_package\n\u2502\n\u251c\u2500\u2500 component_descriptions\n\u2502   \u251c\u2500\u2500 custom_component_package_cpp_component.json\n\u2502   \u2514\u2500\u2500 custom_component_package_py_component.json\n\u2502\n\u251c\u2500\u2500 custom_component_package\n\u2502   \u2514\u2500\u2500 py_component.py\n\u2502\n\u251c\u2500\u2500 include\n\u2502   \u2514\u2500\u2500 custom_component_package\n\u2502       \u2514\u2500\u2500 CppComponent.hpp\n\u2502\n\u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 CppComponent.cpp\n\u2502\n\u251c\u2500\u2500 CMakeLists.txt\n\u251c\u2500\u2500 package.xml\n\u2514\u2500\u2500 setup.cfg\n")),(0,a.kt)("p",null,"The following sections describe the package contents in more detail."),(0,a.kt)("h3",{id:"packagexml"},"package.xml"),(0,a.kt)("p",null,"The package manifest file defines the package metadata (name, version, description, maintainer and license) and package\ndependencies. An example including minimal dependencies is given below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml",metastring:'title="package.xml"',title:'"package.xml"'},'<?xml version="1.0"?>\n<?xml-model href="http://download.ros.org/schema/package_format3.xsd" schematypens="http://www.w3.org/2001/XMLSchema"?>\n<package format="3">\n    <version>0.0.1</version>\n    <name>custom_component_package</name>\n    <description>An example package for custom components</description>\n    <maintainer email="john@example.com">John Doe</maintainer>\n    <license>MIT</license>\n\n    <buildtool_depend>ament_cmake_auto</buildtool_depend>\n    <buildtool_depend>ament_cmake_python</buildtool_depend>\n\n    <depend>modulo_components</depend>\n\n    <export>\n        <build_type>ament_cmake</build_type>\n    </export>\n</package>\n')),(0,a.kt)("h3",{id:"cmakeliststxt"},"CMakeLists.txt"),(0,a.kt)("p",null,"The package build instructions are defined in a ",(0,a.kt)("inlineCode",{parentName:"p"},"CMakeLists.txt")," file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cmake",metastring:'title="CMakeLists.txt"',title:'"CMakeLists.txt"'},"cmake_minimum_required(VERSION 3.15)\nproject(custom_component_package)\n\n# find dependencies\nfind_package(ament_cmake_auto REQUIRED)\nfind_package(ament_cmake_python REQUIRED)\n\nament_auto_find_build_dependencies()\n\ninclude_directories(include)\n\n# highlight-next-line\n### Register and install C++ Components here ###\n\n# install Python modules\nament_python_install_package(${PROJECT_NAME} SCRIPTS_DESTINATION lib/${PROJECT_NAME})\n\n# export JSON component descriptions in the component_descriptions directory\ninstall(DIRECTORY ./component_descriptions\n        DESTINATION .)\n\nament_auto_package()\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"C++ components need to be added as library targets, registered with the ",(0,a.kt)("inlineCode",{parentName:"p"},"rclcpp_components_register_nodes")," macro\nand finally exported with the ",(0,a.kt)("inlineCode",{parentName:"p"},"install")," directive. See the C++ example in the next section.")),(0,a.kt)("h3",{id:"setupcfg"},"setup.cfg"),(0,a.kt)("p",null,"If the package contains any Python components, they need to be registered in a separate ",(0,a.kt)("inlineCode",{parentName:"p"},"setup.cfg")," file. Refer to\nthe Python example in the next section."),(0,a.kt)("p",null,"If a package contains no Python components, the ",(0,a.kt)("inlineCode",{parentName:"p"},"setup.cfg")," file is not needed."),(0,a.kt)("h3",{id:"source-directories"},"Source directories"),(0,a.kt)("p",null,"Relative to the package root, C++ components should have header files defined in an ",(0,a.kt)("inlineCode",{parentName:"p"},"include/<package_name>")," directory\nand source files defined in a ",(0,a.kt)("inlineCode",{parentName:"p"},"src")," directory."),(0,a.kt)("p",null,"Python components should be defined in a subdirectory matching the package name."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Any changes to the standard directory structure must be reflected in the ",(0,a.kt)("inlineCode",{parentName:"p"},"CMakeLists.txt")," file accordingly.")),(0,a.kt)("h3",{id:"component-descriptions"},"Component descriptions"),(0,a.kt)("p",null,"To fully support custom components in AICA Core, each new component should be fully described\nby a JSON file according to the component description schema."))}d.isMDXComponent=!0}}]);