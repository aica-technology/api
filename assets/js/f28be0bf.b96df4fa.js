"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9970],{319:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"concepts/ros-concepts/urdf","title":"URDF","description":"In ROS, a URDF is an XML-based format used to describe the physical configuration of a robot. The terms URDF and","source":"@site/docs/concepts/ros-concepts/urdf.md","sourceDirName":"concepts/ros-concepts","slug":"/concepts/ros-concepts/urdf","permalink":"/docs/concepts/ros-concepts/urdf","draft":false,"unlisted":false,"editUrl":"https://github.com/aica-technology/api/tree/main/docs/docs/concepts/ros-concepts/urdf.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"title":"URDF"},"sidebar":"conceptsSidebar","previous":{"title":"TF","permalink":"/docs/concepts/ros-concepts/tf"},"next":{"title":"Controlling robots","permalink":"/docs/concepts/ros-concepts/controlling-robots"}}');var o=i(4848),r=i(8453);const s=i.p+"assets/images/six-axis-arm-6e54fddf76f581fd9dd98303afdba0ff.png",l={sidebar_position:6,title:"URDF"},a="Unified Robot Description Format",c={},d=[];function m(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"unified-robot-description-format",children:"Unified Robot Description Format"})}),"\n",(0,o.jsxs)(e.p,{children:["In ROS, a ",(0,o.jsx)(e.strong,{children:"URDF"})," is an XML-based format used to describe the physical configuration of a robot. The terms URDF and\n",(0,o.jsx)(e.strong,{children:"robot description"})," are often used interchangeably. URDF files define the robot's structure in terms of:"]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Links"}),": Rigid bodies representing parts of the robot (e.g. arms, base, sensors)."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Joints"}),": Connections between links, specifiying how they move relative to each other (e.g. revolut, prismatic,\netc.)."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Visuals and Collisions"}),": 3D geometry for visualization and collision checking."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Inertial Properties"}),": Mass and inertia of links for physics simulation."]}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:["URDFs are essential for simulation, visualization, motion planning, and interfacing with tools like\n",(0,o.jsx)(e.a,{href:"/docs/concepts/ros-concepts/controlling-robots",children:"ros2_control"}),". They provide a standardized way to represent a robot's kinematic and dynamic\nproperties."]}),"\n",(0,o.jsx)(e.admonition,{type:"tip",children:(0,o.jsx)(e.p,{children:"Different tools or simulators might require different formats for a robot description (e.g. SDF for Gazebo, USD and XRDF\nfor Isaac Sim, MJCF for MuJoCo, etc.). They all share the same basic ideas and there exists a wide range of open source\nconversion tools."})}),"\n",(0,o.jsxs)(e.p,{children:["The XML file belows shows the URDF of a very simple six axis robot arm that consists of a series of links connected by\nrevolute joints. Each definition of a link is followed by a joint that connects it to its child link. Links have an\noptional ",(0,o.jsx)(e.code,{children:"visual"})," tag that says how it should be visualized. In this case, cylinders as geometrical primitive are used\nto give the robot a certain look. URDFs of real hardware usually refer to 3D model files (STL, DAE) for this. Note that\nthe links are directly related to ",(0,o.jsx)(e.a,{href:"/docs/concepts/ros-concepts/tf",children:"TF"})," as every link will become its own coordinate frame. The image below\nshows the visualization of this robot description with the links as frames in TF."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-xml",children:'<?xml version="1.0" ?>\n<robot name="six_axis_arm_robot">\n  <material name="generic/Yellow">\n    <color rgba="1 1 0 1"/>\n  </material>\n  <material name="generic/LightGrey">\n    <color rgba="0.6 0.6 0.6 1"/>\n  </material>\n  <link name="world"/>\n  <joint name="to_world" type="fixed">\n    <parent link="world"/>\n    <child link="base_link"/>\n    <origin rpy="0 0 0" xyz="0 0 0"/>\n  </joint>\n  <link name="base_link">\n    <visual>\n      <origin rpy="0 0 0" xyz="0 0 0.01"/>\n      <geometry>\n        <cylinder length="0.02" radius="0.08"/>\n      </geometry>\n      <material name="generic/LightGrey"/>\n    </visual>\n  </link>\n  <joint name="joint_0" type="revolute">\n    <parent link="base_link"/>\n    <child link="link_0"/>\n    <origin rpy="0 0 0" xyz="0 0 0.085"/>\n    <axis xyz="0 0 1"/>\n    <limit effort="30.0" lower="-3.14" upper="3.14" velocity="5.0"/>\n  </joint>\n  <link name="link_0">\n    <visual>\n      <origin rpy="0 0 0" xyz="0 0 0"/>\n      <geometry>\n        <cylinder length="0.13" radius="0.05"/>\n      </geometry>\n      <material name="generic/LightGrey"/>\n    </visual>\n  </link>\n  <joint name="joint_1" type="revolute">\n    <parent link="link_0"/>\n    <child link="link_1"/>\n    <origin rpy="0 0 0" xyz="0 0.0825 0"/>\n    <axis xyz="0 1 0"/>\n    <limit effort="30.0" lower="-1.57" upper="1.57" velocity="5.0"/>\n  </joint>\n  <link name="link_1">\n    <visual>\n      <origin rpy="1.57 0 0" xyz="0 0 0"/>\n      <geometry>\n        <cylinder length="0.07" radius="0.03"/>\n      </geometry>\n      <material name="generic/LightGrey"/>\n    </visual>\n    <visual>\n      <origin rpy="0 0 0" xyz="0 0 0.21"/>\n      <geometry>\n        <cylinder length="0.42" radius="0.03"/>\n      </geometry>\n      <material name="generic/LightGrey"/>\n    </visual>\n  </link>\n  <joint name="joint_2" type="revolute">\n    <parent link="link_1"/>\n    <child link="link_2"/>\n    <origin rpy="1.57 0 3.14" xyz="0 -0.03375 0.39"/>\n    <axis xyz="0 0 1"/>\n    <limit effort="30.0" lower="-1.57" upper="1.57" velocity="5.0"/>\n  </joint>\n  <link name="link_2">\n    <visual>\n      <origin rpy="0 0 0" xyz="0 0 0"/>\n      <geometry>\n        <cylinder length="0.07" radius="0.0225"/>\n      </geometry>\n      <material name="generic/LightGrey"/>\n    </visual>\n    <visual>\n      <origin rpy="0 1.57 0" xyz="-0.1525 0 -0.052500000000000005"/>\n      <geometry>\n        <cylinder length="0.35" radius="0.0225"/>\n      </geometry>\n      <material name="generic/LightGrey"/>\n    </visual>\n    <visual>\n      <origin rpy="0 0 0" xyz="-0.306 0 -0.023333333333333338"/>\n      <geometry>\n        <cylinder length="0.07" radius="0.02"/>\n      </geometry>\n      <material name="generic/LightGrey"/>\n    </visual>\n  </link>\n  <joint name="joint_3" type="revolute">\n    <parent link="link_2"/>\n    <child link="link_3"/>\n    <origin rpy="0 1.57 0" xyz="-0.31499999999999995 0 0"/>\n    <axis xyz="1 0 0"/>\n    <limit effort="30.0" lower="-1.57" upper="1.57" velocity="5.0"/>\n  </joint>\n  <link name="link_3">\n    <visual>\n      <origin rpy="0 0 0" xyz="0 0 -0.01125"/>\n      <geometry>\n        <cylinder length="0.07" radius="0.0225"/>\n      </geometry>\n      <material name="generic/LightGrey"/>\n    </visual>\n  </link>\n  <joint name="joint_4" type="revolute">\n    <parent link="link_3"/>\n    <child link="link_4"/>\n    <origin rpy="1.57 0 0" xyz="0 0 -0.0575"/>\n    <axis xyz="0 1 0"/>\n    <limit effort="30.0" lower="-1.57" upper="1.57" velocity="5.0"/>\n  </joint>\n  <link name="link_4">\n    <visual>\n      <origin rpy="0 0 0" xyz="0 0 0"/>\n      <geometry>\n        <cylinder length="0.07" radius="0.0225"/>\n      </geometry>\n      <material name="generic/LightGrey"/>\n    </visual>\n  </link>\n  <joint name="joint_5" type="revolute">\n    <parent link="link_4"/>\n    <child link="link_5"/>\n    <origin rpy="0 0 3.14" xyz="0 0 0.045000000000000005"/>\n    <axis xyz="0 0 1"/>\n    <limit effort="30.0" lower="-1.57" upper="1.57" velocity="5.0"/>\n  </joint>\n  <link name="link_5">\n    <visual>\n      <origin rpy="0 0 0" xyz="0 0 0"/>\n      <geometry>\n        <cylinder length="0.02" radius="0.0225"/>\n      </geometry>\n      <material name="generic/Yellow"/>\n    </visual>\n  </link>\n  <joint name="arm-tool0" type="fixed">\n    <origin rpy="0 0 0" xyz="0 0 0"/>\n    <parent link="link_5"/>\n    <child link="tool0"/>\n  </joint>\n  <link name="tool0"/>\n</robot>\n'})}),"\n",(0,o.jsx)("div",{class:"text--center",children:(0,o.jsx)("img",{src:s,alt:"Visualization of simple URDF"})}),"\n",(0,o.jsx)(e.admonition,{type:"info",children:(0,o.jsxs)(e.p,{children:["Check the detailed XML specifications of URDF files in ",(0,o.jsx)(e.a,{href:"https://wiki.ros.org/urdf/XML",children:"the official documentation"}),"."]})})]})}function p(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(m,{...n})}):m(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>s,x:()=>l});var t=i(6540);const o={},r=t.createContext(o);function s(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);