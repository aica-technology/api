"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[89],{5682:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>l,frontMatter:()=>i,metadata:()=>o,toc:()=>p});const o=JSON.parse('{"id":"reference/custom-components/component-package","title":"Creating a component package","description":"The creation of a component package can be greatly simplified by using","source":"@site/docs/reference/custom-components/component-package.md","sourceDirName":"reference/custom-components","slug":"/reference/custom-components/component-package","permalink":"/docs/reference/custom-components/component-package","draft":false,"unlisted":false,"editUrl":"https://github.com/aica-technology/api/tree/main/docs/docs/reference/custom-components/component-package.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Creating a component package"},"sidebar":"programmingReferenceSidebar","previous":{"title":"Custom components","permalink":"/docs/category/custom-components"},"next":{"title":"Writing a component","permalink":"/docs/reference/custom-components/custom-component"}}');var c=t(4848),a=t(8453);const i={sidebar_position:1,title:"Creating a component package"},s="Creating a component package",r={},p=[{value:"Package infrastructure",id:"package-infrastructure",level:2},{value:"package.xml",id:"packagexml",level:3},{value:"CMakeLists.txt",id:"cmakeliststxt",level:3},{value:"setup.cfg",id:"setupcfg",level:3},{value:"Source directories",id:"source-directories",level:3},{value:"Component descriptions",id:"component-descriptions",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"creating-a-component-package",children:"Creating a component package"})}),"\n",(0,c.jsxs)(n.admonition,{type:"info",children:[(0,c.jsxs)(n.p,{children:["The creation of a component package can be greatly simplified by using\nour ",(0,c.jsx)(n.a,{href:"https://github.com/aica-technology/component-template",children:"Component Template"}),". It comes with a boilerplate project\nwhich supports both C++ and Python."]}),(0,c.jsx)(n.p,{children:"A lot of the information in this page is also available in the README of the template repository."})]}),"\n",(0,c.jsx)(n.p,{children:"Custom components can be defined in ROS 2 packages and used alongside the standard library of AICA components in AICA Core. Components can be implemented in C++ or Python. A component package can contain multiple\ncomponents in either language."}),"\n",(0,c.jsx)(n.h2,{id:"package-infrastructure",children:"Package infrastructure"}),"\n",(0,c.jsxs)(n.p,{children:["A minimal directory structure for an example package named ",(0,c.jsx)(n.code,{children:"custom_component_package"})," with C++ and Python component\nimplementations is shown below."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"custom_component_package\n\u2502\n\u251c\u2500\u2500 component_descriptions\n\u2502   \u251c\u2500\u2500 custom_component_package_cpp_component.json\n\u2502   \u2514\u2500\u2500 custom_component_package_py_component.json\n\u2502\n\u251c\u2500\u2500 custom_component_package\n\u2502   \u2514\u2500\u2500 py_component.py\n\u2502\n\u251c\u2500\u2500 include\n\u2502   \u2514\u2500\u2500 custom_component_package\n\u2502       \u2514\u2500\u2500 CppComponent.hpp\n\u2502\n\u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 CppComponent.cpp\n\u2502\n\u251c\u2500\u2500 CMakeLists.txt\n\u251c\u2500\u2500 package.xml\n\u2514\u2500\u2500 setup.cfg\n"})}),"\n",(0,c.jsx)(n.p,{children:"The following sections describe the package contents in more detail."}),"\n",(0,c.jsx)(n.h3,{id:"packagexml",children:"package.xml"}),"\n",(0,c.jsx)(n.p,{children:"The package manifest file defines the package metadata (name, version, description, maintainer and license) and package\ndependencies. An example including minimal dependencies is given below."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-xml",metastring:'title="package.xml"',children:'<?xml version="1.0"?>\n<?xml-model href="http://download.ros.org/schema/package_format3.xsd" schematypens="http://www.w3.org/2001/XMLSchema"?>\n<package format="3">\n    <version>0.0.1</version>\n    <name>custom_component_package</name>\n    <description>An example package for custom components</description>\n    <maintainer email="john@example.com">John Doe</maintainer>\n    <license>MIT</license>\n\n    <buildtool_depend>ament_cmake_auto</buildtool_depend>\n    <buildtool_depend>ament_cmake_python</buildtool_depend>\n\n    <depend>modulo_components</depend>\n\n    <export>\n        <build_type>ament_cmake</build_type>\n    </export>\n</package>\n'})}),"\n",(0,c.jsx)(n.h3,{id:"cmakeliststxt",children:"CMakeLists.txt"}),"\n",(0,c.jsxs)(n.p,{children:["The package build instructions are defined in a ",(0,c.jsx)(n.code,{children:"CMakeLists.txt"})," file."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-cmake",metastring:'title="CMakeLists.txt"',children:"cmake_minimum_required(VERSION 3.15)\nproject(custom_component_package)\n\n# find dependencies\nfind_package(ament_cmake_auto REQUIRED)\nfind_package(ament_cmake_python REQUIRED)\n\nament_auto_find_build_dependencies()\n\ninclude_directories(include)\n\n# highlight-next-line\n### Register and install C++ Components here ###\n\n# install Python modules\nament_python_install_package(${PROJECT_NAME} SCRIPTS_DESTINATION lib/${PROJECT_NAME})\n\n# export JSON component descriptions in the component_descriptions directory\ninstall(DIRECTORY ./component_descriptions\n        DESTINATION .)\n\nament_auto_package()\n"})}),"\n",(0,c.jsx)(n.admonition,{type:"note",children:(0,c.jsxs)(n.p,{children:["C++ components need to be added as library targets, registered with the ",(0,c.jsx)(n.code,{children:"rclcpp_components_register_nodes"})," macro\nand finally exported with the ",(0,c.jsx)(n.code,{children:"install"})," directive. See the C++ example in the next section."]})}),"\n",(0,c.jsx)(n.h3,{id:"setupcfg",children:"setup.cfg"}),"\n",(0,c.jsxs)(n.p,{children:["If the package contains any Python components, they need to be registered in a separate ",(0,c.jsx)(n.code,{children:"setup.cfg"})," file. Refer to\nthe Python example in the next section."]}),"\n",(0,c.jsxs)(n.p,{children:["If a package contains no Python components, the ",(0,c.jsx)(n.code,{children:"setup.cfg"})," file is not needed."]}),"\n",(0,c.jsx)(n.h3,{id:"source-directories",children:"Source directories"}),"\n",(0,c.jsxs)(n.p,{children:["Relative to the package root, C++ components should have header files defined in an ",(0,c.jsx)(n.code,{children:"include/<package_name>"})," directory\nand source files defined in a ",(0,c.jsx)(n.code,{children:"src"})," directory."]}),"\n",(0,c.jsx)(n.p,{children:"Python components should be defined in a subdirectory matching the package name."}),"\n",(0,c.jsx)(n.admonition,{type:"caution",children:(0,c.jsxs)(n.p,{children:["Any changes to the standard directory structure must be reflected in the ",(0,c.jsx)(n.code,{children:"CMakeLists.txt"})," file accordingly."]})}),"\n",(0,c.jsx)(n.h3,{id:"component-descriptions",children:"Component descriptions"}),"\n",(0,c.jsx)(n.p,{children:"To fully support custom components in AICA Core, each new component should be fully described\nby a JSON file according to the component description schema."})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var o=t(6540);const c={},a=o.createContext(c);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);