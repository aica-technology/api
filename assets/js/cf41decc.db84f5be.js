"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5426],{5537:(e,n,t)=>{t.d(n,{A:()=>v});var a=t(6540),o=t(8215),s=t(5627),r=t(6347),i=t(372),c=t(604),l=t(1861),p=t(8749);function d(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:o}}=e;return{value:n,label:t,attributes:a,default:o}}))}(t);return function(e){const n=(0,l.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function u(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:t}=e;const o=(0,r.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(o.location.search);n.set(s,e),o.replace({...o.location,search:n.toString()})}),[s,o])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:o}=e,s=m(e),[r,c]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s}))),[l,d]=h({queryString:t,groupId:o}),[g,_]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[o,s]=(0,p.Dv)(t);return[o,(0,a.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:o}),b=(()=>{const e=l??g;return u({value:e,tabValues:s})?e:null})();(0,i.A)((()=>{b&&c(b)}),[b]);return{selectedValue:r,selectValue:(0,a.useCallback)((e=>{if(!u({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);c(e),d(e),_(e)}),[d,_,s]),tabValues:s}}var _=t(9136);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=t(4848);function x(e){let{className:n,block:t,selectedValue:a,selectValue:r,tabValues:i}=e;const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,s.a_)(),p=e=>{const n=e.currentTarget,t=c.indexOf(n),o=i[t].value;o!==a&&(l(n),r(o))},d=e=>{let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>{c.push(e)},onKeyDown:d,onClick:p,...s,className:(0,o.A)("tabs__item",b.tabItem,s?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function j(e){let{lazy:n,children:t,selectedValue:s}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=g(e);return(0,f.jsxs)("div",{className:(0,o.A)("tabs-container",b.tabList),children:[(0,f.jsx)(x,{...n,...e}),(0,f.jsx)(j,{...n,...e})]})}function v(e){const n=(0,_.A)();return(0,f.jsx)(y,{...e,children:d(e.children)},String(n))}},8444:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>c,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"reference/custom-components/custom-component","title":"Writing a component","description":"The following sections show example code snippets to illustrate how custom component classes can be implemented in","source":"@site/docs/reference/custom-components/custom-component.md","sourceDirName":"reference/custom-components","slug":"/reference/custom-components/custom-component","permalink":"/docs/reference/custom-components/custom-component","draft":false,"unlisted":false,"editUrl":"https://github.com/aica-technology/api/tree/main/docs/docs/reference/custom-components/custom-component.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Writing a component"},"sidebar":"programmingReferenceSidebar","previous":{"title":"Creating a component package","permalink":"/docs/reference/custom-components/component-package"},"next":{"title":"Describing a component","permalink":"/docs/reference/custom-components/component-descriptions"}}');var o=t(4848),s=t(8453),r=t(5537),i=t(9329);const c={sidebar_position:2,title:"Writing a component"},l="Writing a component",p={},d=[{value:"Inheritance and registration",id:"inheritance-and-registration",level:2},{value:"Adding parameters",id:"adding-parameters",level:2},{value:"Accessing parameter values",id:"accessing-parameter-values",level:3},{value:"Default value",id:"default-value",level:3},{value:"Validating parameters",id:"validating-parameters",level:2},{value:"Adding signals",id:"adding-signals",level:2},{value:"Signal name",id:"signal-name",level:3},{value:"Message types",id:"message-types",level:3},{value:"Inputs",id:"inputs",level:3},{value:"User callbacks",id:"user-callbacks",level:4},{value:"Outputs",id:"outputs",level:3},{value:"Adding periodic behavior",id:"adding-periodic-behavior",level:2}];function m(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"writing-a-component",children:"Writing a component"})}),"\n",(0,o.jsx)(n.p,{children:"The following sections show example code snippets to illustrate how custom component classes can be implemented in\nPython or C++."}),"\n",(0,o.jsx)(n.h2,{id:"inheritance-and-registration",children:"Inheritance and registration"}),"\n",(0,o.jsxs)(n.p,{children:["Custom component classes should derive from either the ",(0,o.jsx)(n.code,{children:"Component"})," or ",(0,o.jsx)(n.code,{children:"LifecycleComponent"})," class of the\n",(0,o.jsx)(n.code,{children:"modulo_components"})," library. The following examples will use the ",(0,o.jsx)(n.code,{children:"Component"})," class, but the usage for\n",(0,o.jsx)(n.code,{children:"LifecycleComponent"})," is equivalent."]}),"\n",(0,o.jsxs)(n.p,{children:["Refer to the ",(0,o.jsx)(n.a,{href:"https://aica-technology.github.io/modulo/versions/main",children:"modulo documentation"})," for a comprehensive API\nreference on components."]}),"\n",(0,o.jsxs)(n.admonition,{type:"info",children:[(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"LifecycleComponent"})," class extends the common component interface with additional functions that can be overridden\nfor customized behavior. These functions are ",(0,o.jsx)(n.code,{children:"on_step_callback()"})," and the collection of state transition callbacks."]}),(0,o.jsxs)(t,{children:[(0,o.jsx)("summary",{children:"Lifecycle state transition callbacks"}),(0,o.jsxs)("ul",{children:[(0,o.jsx)("li",{children:(0,o.jsx)("code",{children:"on_configure_callback()"})}),(0,o.jsx)("li",{children:(0,o.jsx)("code",{children:"on_activate_callback()"})}),(0,o.jsx)("li",{children:(0,o.jsx)("code",{children:"on_deactivate_callback()"})}),(0,o.jsx)("li",{children:(0,o.jsx)("code",{children:"on_cleanup_callback()"})}),(0,o.jsx)("li",{children:(0,o.jsx)("code",{children:"on_shutdown_callback()"})}),(0,o.jsx)("li",{children:(0,o.jsx)("code",{children:"on_error_callback()"})})]})]})]}),"\n",(0,o.jsx)(n.p,{children:"Registration is the term for defining and exporting a unique class name for the component so that it can be dynamically\nloaded by the AICA state engine."}),"\n",(0,o.jsxs)(r.A,{groupId:"programming-language",children:[(0,o.jsxs)(i.A,{value:"python",label:"Python",children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",metastring:'title="py_component.py"',children:"from modulo_components.component import Component\n\nclass PyComponent(Component):\n    def __init__(self, node_name: str, *args, **kwargs):\n        super().__init__(node_name, *args, **kwargs)\n        # use the constructor to declare parameters, predicates, services, signals and periodic callback functions\n"})}),(0,o.jsxs)(n.p,{children:["To register the component, define an entry point under ",(0,o.jsx)(n.code,{children:"python_components"})," in ",(0,o.jsx)(n.code,{children:"setup.cfg"})," that refers to the class\nimplementation."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",metastring:'title="setup.cfg"',children:"[options.entry_points]\npython_components =\n    custom_component_package::PyComponent = custom_component_package.py_component:PyComponent\n"})})]}),(0,o.jsxs)(i.A,{value:"c++",label:"C++",children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="include/custom_component_package/CppComponent.hpp"',children:"#pragma once\n\n#include <modulo_components/Component.hpp>\n\nnamespace custom_component_package {\nclass CppComponent : public modulo_components::Component {\npublic:\n  explicit CppComponent(const rclcpp::NodeOptions& options);\n};\n}  // namespace custom_component_package\n"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="src/CppComponent.cpp"',children:'#include "custom_component_package/CppComponent.hpp"\n\nnamespace custom_component_package {\nCppComponent::CppComponent(const rclcpp::NodeOptions& options) : modulo_components::Component(options) {\n  // use the constructor to declare parameters, predicates, services, signals and periodic callback functions\n}\n\n} // namespace custom_component_package\n\n#include "rclcpp_components/register_node_macro.hpp"\n\nRCLCPP_COMPONENTS_REGISTER_NODE(custom_component_package::CppComponent)\n'})}),(0,o.jsxs)(n.p,{children:["To register the component, use the ",(0,o.jsx)(n.code,{children:"RCLCPP_COMPONENTS_REGISTER_NODE"})," macro in the source file.\nThen add, register and export the component library in ",(0,o.jsx)(n.code,{children:"CMakeLists.txt"}),":"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cmake",metastring:'title="CMakeLists.txt"',children:'ament_auto_add_library(custom_component SHARED ${PROJECT_SOURCE_DIR}/src/CppComponent.cpp)\nrclcpp_components_register_nodes(custom_component "custom_component_package::CppComponent")\n\ninstall(TARGETS custom_component\n        LIBRARY DESTINATION lib)\n'})})]})]}),"\n",(0,o.jsx)(n.admonition,{type:"caution",children:(0,o.jsxs)(n.p,{children:["When registering a component, the class name must be defined in the namespace of the package, delimited by double\ncolons ",(0,o.jsx)(n.code,{children:"::"}),". For example, the component classes ",(0,o.jsx)(n.code,{children:"CppComponent"})," and ",(0,o.jsx)(n.code,{children:"PyComponent"})," in the\npackage ",(0,o.jsx)(n.code,{children:"custom_component_package"})," should be registered as ",(0,o.jsx)(n.code,{children:"custom_component_package::CppComponent"}),"\nand ",(0,o.jsx)(n.code,{children:"custom_component_package::PyComponent"})," respectively, so that the package can be inferred from the registered name."]})}),"\n",(0,o.jsx)(n.h2,{id:"adding-parameters",children:"Adding parameters"}),"\n",(0,o.jsx)(n.p,{children:"A component parameter can be added either as a class attribute or declared in-line."}),"\n",(0,o.jsxs)(n.p,{children:["Component implementations use parameter objects and types as defined in the ",(0,o.jsx)(n.code,{children:"state_representation"})," library.\nThese parameter objects are automatically mapped and bound to the corresponding ROS 2 parameter on the parameter\ninterface."]}),"\n",(0,o.jsxs)(r.A,{groupId:"programming-language",children:[(0,o.jsxs)(i.A,{value:"python",label:"Python",children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",metastring:'title="custom_component.py"',children:"import state_representation as sr\n"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",metastring:'title="custom_component.py"',children:'    def __init__(self, node_name: str, *args, **kwargs):\n        # ...\n        \n        # define a parameter as a class attribute, then add it to the component using the attribute name\n        self._parameter_a = sr.Parameter("A", sr.ParameterType.INT)\n        self.add_parameter("_parameter_a", "Description of parameter A")\n        \n        # or, define and add a parameter in-line\n        self.add_parameter(sr.Parameter("B", sr.ParameterType.DOUBLE), "Description of parameter B")\n'})})]}),(0,o.jsxs)(i.A,{value:"c++",label:"C++",children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="include/custom_component_package/CppComponent.hpp"',children:"class CppComponent : public modulo_components::Component {\npublic:\n  explicit CppComponent(const rclcpp::NodeOptions& options);\n\nprotected:\n  std::shared_ptr<state_representation::Parameter<int>> parameter_a_;\n};\n"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="src/CppComponent.cpp"',children:'CppComponent::CppComponent(const rclcpp::NodeOptions& options):\n    modulo_components::Component(options),\n    parameter_a_(std::make_shared<state_representation::Parameter<int>>("A")) {\n  // ...\n  \n  // define a parameter as a class property, then add it to the component\n  this->add_parameter(this->parameter_a_, "Description of parameter A");\n  \n  // or, define and add a parameter in-line\n  this->add_parameter(std::make_shared<state_representation::Parameter<double>>("B"), "Description of parameter B");\n}\n'})})]})]}),"\n",(0,o.jsx)(n.h3,{id:"accessing-parameter-values",children:"Accessing parameter values"}),"\n",(0,o.jsxs)(n.p,{children:["To access the parameter value in other parts of the component implementation, use the ",(0,o.jsx)(n.code,{children:"get_value()"})," method either on\nthe class attribute or on the parameter object returned by ",(0,o.jsx)(n.code,{children:"get_parameter()"})]}),"\n",(0,o.jsxs)(r.A,{groupId:"programming-language",children:[(0,o.jsx)(i.A,{value:"python",label:"Python",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'self._parameter_a.get_value()\n\nself.get_parameter("B").get_value()\n'})})}),(0,o.jsx)(i.A,{value:"c++",label:"C++",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:'this->parameter_a_->get_value();\n\nthis->get_parameter("B")->get_value();\n'})})})]}),"\n",(0,o.jsx)(n.h3,{id:"default-value",children:"Default value"}),"\n",(0,o.jsx)(n.p,{children:"If no default value is declared, the parameter object will be empty until set."}),"\n",(0,o.jsxs)(r.A,{groupId:"programming-language",children:[(0,o.jsx)(i.A,{value:"python",label:"Python",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'x = sr.Parameter("X", sr.ParameterType.INT)  # no default value!\nx.is_empty()  # evaluates to True\nx.get_value()  # raises an EmptyStateError\n\ny = sr.Parameter("Y", 10, sr.ParameterType.INT)  # default value: 10\ny.is_empty()  # evaluates to False\ny.get_value()  # evaluates to 10\n'})})}),(0,o.jsx)(i.A,{value:"c++",label:"C++",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:'auto x = std::make_shared<state_representation::Parameter<int>>("X");  // no default value!\nx->is_empty();  // evaluates to true\nx->get_value();  // raises an EmptyStateException\n\nauto y = std::make_shared<state_representation::Parameter<int>>("Y", 10);  // default value: 10\ny->is_empty();  // evaluates to false\ny->get_value();  // evaluates to 10\n'})})})]}),"\n",(0,o.jsx)(n.h2,{id:"validating-parameters",children:"Validating parameters"}),"\n",(0,o.jsxs)(n.p,{children:["Whenever a component parameter is changed, the special ",(0,o.jsx)(n.code,{children:"on_validate_parameter_callback()"})," function is triggered.\nOverride this function to perform parameter validation logic."]}),"\n",(0,o.jsx)(n.p,{children:"If the function returns false, the incoming parameter change is rejected and the internal component parameter is not\nchanged. If the function returns true, the incoming parameter change is accepted and applied to the component parameter."}),"\n",(0,o.jsx)(n.p,{children:"The validation function can freely mutate the incoming parameter value before returning true, for example to constrain\na numerical value between some upper and lower bounds."}),"\n",(0,o.jsxs)(r.A,{groupId:"programming-language",children:[(0,o.jsx)(i.A,{value:"python",label:"Python",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",metastring:'title="custom_component.py"',children:'    def on_validate_parameter_callback(self, parameter: sr.Parameter) -> bool:\n        if parameter.get_name() == "A":\n            if parameter.is_empty():\n                self.get_logger().warn("Parameter A cannot be empty")\n                return False\n        elif parameter.get_name() == "B":\n            if parameter and parameter.get_value() < 0.0:\n                self.get_logger().warn(f"Parameter B cannot be negative ({parameter.get_value()}). "\n                                        "Setting value to 0.0 instead")\n                parameter.set_value(0.0)\n        return True\n'})})}),(0,o.jsxs)(i.A,{value:"c++",label:"C++",children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="include/custom_component_package/CppComponent.hpp"',children:"class CppComponent : public modulo_components::Component {\n// ...\n\nprotected:\n  bool\n  on_validate_parameter_callback(const std::shared_ptr<state_representation::ParameterInterface>& parameter) override;\n};\n"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="src/CppComponent.cpp"',children:'bool CppComponent::on_validate_parameter_callback(\n    const std::shared_ptr<ParameterInterface>& parameter\n) {\n  if (parameter->get_name() == "A") {\n    if (parameter->is_empty()) {\n      RCLCPP_WARN(this->get_logger(), "Parameter A cannot be empty");\n      return false;\n    }\n  } else if (parameter->get_name() == "B") {\n    if (parameter && parameter->get_value() < 0.0) {\n      RCLCPP_WARN(this->get_logger(), "Parameter B cannot be negative (%f). Setting value to 0.0 instead",\n                  parameter->get_value());\n      parameter->set_value(0.0);\n    }\n  }\n  return true;\n}\n'})})]})]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["Use the logging interface provided by ",(0,o.jsx)(n.code,{children:"modulo_components"})," wherever appropriate. This will forward log messages from\ncustom components to ROS logs and the user interface."]})}),"\n",(0,o.jsx)(n.h2,{id:"adding-signals",children:"Adding signals"}),"\n",(0,o.jsx)(n.p,{children:"Components make it possible to bind data objects to publishers or subscribers with class attributes. For inputs, this\nmeans that the associated input data object is automatically updated every time a new message is received. For outputs,\nthis means that internal changes to the output data object will automatically be updated in the publisher."}),"\n",(0,o.jsx)(n.p,{children:"The binding logic is supported for a number of common message data types. To interface with non-standard messages\n(for example, to communicate with ROS 2 nodes using custom message types outside the AICA System), it is possible to\ndefine raw publishers and subscribers following standard ROS 2 conventions."}),"\n",(0,o.jsx)(n.h3,{id:"signal-name",children:"Signal name"}),"\n",(0,o.jsxs)(n.p,{children:["Component signals are declared and managed with unique signal names. The signal name is used to determine the default\ntopic. For a signal added under the name ",(0,o.jsx)(n.code,{children:"foo"}),", the default topic will be ",(0,o.jsx)(n.code,{children:"~/foo"}),". Adding a signal also automatically\ncreates and associates a parameter with that signal with the parameter name ",(0,o.jsx)(n.code,{children:"[signal_name]_topic"}),", which is used to\noverride the default topic name at runtime. For a signal name ",(0,o.jsx)(n.code,{children:"foo"}),", the parameter associated to the signal topic will\nbe called ",(0,o.jsx)(n.code,{children:"foo_topic"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"For these reasons, signal names must adhere to the following rules:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Signal names must be unique for all inputs and outputs of the component"}),"\n",(0,o.jsxs)(n.li,{children:["Signal names must be written in ",(0,o.jsx)(n.code,{children:"lower_snake_case"})," (using only lowercase letters, numbers and underscores)"]}),"\n",(0,o.jsx)(n.li,{children:"Signal names cannot start with a number or underscore."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"message-types",children:"Message types"}),"\n",(0,o.jsxs)(n.p,{children:["The supported message types are defined in the ",(0,o.jsx)(n.code,{children:"std_msgs"})," library and include:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Boolean"}),"\n",(0,o.jsx)(n.li,{children:"integer"}),"\n",(0,o.jsx)(n.li,{children:"floating point numbers (doubles)"}),"\n",(0,o.jsx)(n.li,{children:"floating point array"}),"\n",(0,o.jsx)(n.li,{children:"string"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["For robotic applications, AICA components make it particularly easy to receive, manipulate and send joint and Cartesian\nstates using the ",(0,o.jsx)(n.code,{children:"state_representation"})," and ",(0,o.jsx)(n.code,{children:"clproto"})," message encoding libraries."]}),"\n",(0,o.jsxs)(n.p,{children:["State objects can be bound to inputs or outputs and are sent in a special ",(0,o.jsx)(n.code,{children:"EncodedState"})," message type."]}),"\n",(0,o.jsxs)(n.admonition,{type:"note",children:[(0,o.jsx)(n.p,{children:"In C++, the message type is automatically inferred from the data type when binding inputs or outputs."}),(0,o.jsx)(n.p,{children:"Because Python is dynamically typed, the message type of the class attribute must be specified when binding inputs or\noutputs. The specific message types are available from the following imports."}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from std_msgs.msg import Bool, Int32, Float64, Float64MultiArray, String\n\nfrom modulo_core.encoded_state import EncodedState\n"})})]}),"\n",(0,o.jsx)(n.h3,{id:"inputs",children:"Inputs"}),"\n",(0,o.jsxs)(n.p,{children:["To add an input, bind a class attribute of a supported type to a subscriber using the ",(0,o.jsx)(n.code,{children:"add_input"})," function."]}),"\n",(0,o.jsx)(n.p,{children:"The following example adds two inputs: one as an integer and one as joint positions."}),"\n",(0,o.jsxs)(r.A,{groupId:"programming-language",children:[(0,o.jsxs)(i.A,{value:"python",label:"Python",children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",metastring:'title="custom_component.py"',children:"from std_msgs.msg import Int32\n\nfrom modulo_core.encoded_state import EncodedState\nfrom state_representation import JointPositions\n"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",metastring:'title="custom_component.py"',children:'    def __init__(self, node_name: str, *args, **kwargs):\n        # ...\n        \n        # define input data objects as a class attribute\n        self._input_number = 0\n        self._input_positions = JointPositions()\n        \n        # bind the attribute to an output using the attribute name and message type\n        self.add_input("number", "_input_number", Int32)\n        self.add_input("positions", "_input_positions", EncodedState)\n'})})]}),(0,o.jsxs)(i.A,{value:"c++",label:"C++",children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="include/custom_component_package/CppComponent.hpp"',children:"class CppComponent : public modulo_components::Component {\npublic:\n  explicit CppComponent(const rclcpp::NodeOptions& options);\n\nprivate:\n  std::shared_ptr<int> input_number_;\n  std::shared_ptr<state_representation::JointPositions> input_positions_;\n};\n"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="src/CppComponent.cpp"',children:'CppComponent::CppComponent(const rclcpp::NodeOptions& options):\n    modulo_components::Component(options),\n    input_number_(std::make_shared<int>(0)),\n    input_positions_(std::make_shared<state_representation::CartesianPose>()) {\n  // ...\n  \n  // the message type is inferred from the data type\n  this->add_input("number", this->input_number_);\n  this->add_input("pose", this->input_positions_);\n}\n'})})]})]}),"\n",(0,o.jsx)(n.p,{children:"The value of the class attribute will automatically be updated whenever a new message is received."}),"\n",(0,o.jsx)(n.h4,{id:"user-callbacks",children:"User callbacks"}),"\n",(0,o.jsx)(n.p,{children:"Sometimes it is useful to react to an incoming message by triggering custom callback behavior. For example,\na component might want to keep track of the number of input messages it received."}),"\n",(0,o.jsxs)(r.A,{groupId:"programming-language",children:[(0,o.jsx)(i.A,{value:"python",label:"Python",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",metastring:'title="custom_component.py"',children:'    def __init__(self, node_name: str, *args, **kwargs):\n        # ...\n        \n        self._input_number = 0\n        self._number_of_samples = 0\n\n        # bind a custom callback function to be triggered by the input\n        self.add_input("number", "_input_number", Int32, user_callback=self._number_callback)\n    \n    def _number_callback():\n        self._number_of_samples += 1\n'})})}),(0,o.jsxs)(i.A,{value:"c++",label:"C++",children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="include/custom_component_package/CppComponent.hpp"',children:"class CppComponent : public modulo_components::Component {\npublic:\n  explicit CppComponent(const rclcpp::NodeOptions& options);\n\nprivate:\n  void number_callback();\n\n  std::shared_ptr<int> input_number_;\n  int number_of_samples_;\n};\n"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="src/CppComponent.cpp"',children:'CppComponent::CppComponent(const rclcpp::NodeOptions& options):\n    modulo_components::Component(options),\n    input_number_(std::make_shared<int>(0)),\n    number_of_samples_(0) {\n  // ...\n  \n  // bind a custom callback function to be triggered by the input\n  this->add_input("number", this->input_number_, [this]() {\n      this->number_callback();\n  });\n}\n\nvoid CppComponent::number_callback() {\n  this->number_of_samples_++;\n}\n'})})]})]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["The bound class attribute is updated ",(0,o.jsx)(n.em,{children:"before"})," the user callback is triggered. Accessing the class attribute within the\nuser callback function will always yield the latest value."]})}),"\n",(0,o.jsx)(n.h3,{id:"outputs",children:"Outputs"}),"\n",(0,o.jsxs)(n.p,{children:["To add an output, bind a class attribute of a supported type to a publisher using the ",(0,o.jsx)(n.code,{children:"add_output"})," function."]}),"\n",(0,o.jsx)(n.p,{children:"The following example adds two outputs: one as a floating point number and one as a Cartesian pose."}),"\n",(0,o.jsxs)(r.A,{groupId:"programming-language",children:[(0,o.jsxs)(i.A,{value:"python",label:"Python",children:[(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["When using the ",(0,o.jsx)(n.code,{children:"EncodedState"})," type for an output, the specific underlying state type must also be defined using the\n",(0,o.jsx)(n.code,{children:"MessageType"})," enumeration in the ",(0,o.jsx)(n.code,{children:"clproto"})," library."]})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",metastring:'title="custom_component.py"',children:"from std_msgs.msg import Float64\n\nfrom modulo_core.encoded_state import EncodedState\n\nfrom clproto import MessageType\nfrom state_representation import CartesianPose\n"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",metastring:'title="custom_component.py"',children:'    def __init__(self, node_name: str, *args, **kwargs):\n        # ...\n        \n        # define output data objects as a class attribute\n        self._output_number = 3.14\n        self._output_pose = CartesianPose()\n        \n        # bind the attribute to an output using the attribute name and message type\n        self.add_output("number", "_output_number", Float64)\n        \n        # for encoded states, further define the expected state type when binding the output\n        self.add_output("pose", "_output_pose", EncodedState, MessageType.CARTESIAN_POSE_MESSAGE)\n'})})]}),(0,o.jsxs)(i.A,{value:"c++",label:"C++",children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="include/custom_component_package/CppComponent.hpp"',children:"class CppComponent : public modulo_components::Component {\npublic:\n  explicit CppComponent(const rclcpp::NodeOptions& options);\n\nprivate:\n  std::shared_ptr<double> output_number_;\n  std::shared_ptr<state_representation::CartesianPose> output_pose_;\n};\n"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="src/CppComponent.cpp"',children:'CppComponent::CppComponent(const rclcpp::NodeOptions& options):\n    modulo_components::Component(options),\n    output_number_(std::make_shared<double>(3.14),\n    output_pose_(std::make_shared<state_representation::CartesianPose>()) {\n  // ...\n  \n  // the message type is inferred from the data type\n  this->add_output("number", this->output_number_);\n  this->add_output("pose", this->output_pose_);\n}\n'})})]})]}),"\n",(0,o.jsx)(n.p,{children:"The value of the class attribute can then be freely changed in other parts of the component implementation to update the\npublished value. For example, it may be changed in a periodic step function, or as a result of parameter validation, a\nservice call, an input subscription callback or a lifecycle transition."}),"\n",(0,o.jsxs)(n.admonition,{type:"note",children:[(0,o.jsx)(n.p,{children:"Empty states will not be published."}),(0,o.jsxs)(n.p,{children:["Lifecycle components publish outputs only when the component is in the ",(0,o.jsx)(n.code,{children:"ACTIVE"})," lifecycle state."]})]}),"\n",(0,o.jsx)(n.h2,{id:"adding-periodic-behavior",children:"Adding periodic behavior"}),"\n",(0,o.jsxs)(n.p,{children:["Every component has a built-in ",(0,o.jsx)(n.code,{children:"rate"}),' parameter that defines the execution rate of periodic behaviors in Hertz. For\nexample, a component with a rate of 10 Hertz will execute periodic behaviors ten times per second. The evaluation\nof periodic behaviors is referred to as the component "step".']}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["Lifecycle components evaluate periodic callback functions only when the component is in the ",(0,o.jsx)(n.code,{children:"ACTIVE"})," lifecycle state."]})}),"\n",(0,o.jsxs)(n.p,{children:["Custom periodic behavior can be implemented by overriding the ",(0,o.jsx)(n.code,{children:"on_step_callback"})," function. For example, a random number\ngenerator component might run a pseudo-random function every step so that the published output is always updated."]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["Custom periodic callback functions are always evaluated ",(0,o.jsx)(n.em,{children:"before"})," outputs are published. If a periodic callback function\nmakes any changes to the value of a data object that is bound to and output, the latest value will be published in the\nsame component step."]})}),"\n",(0,o.jsxs)(r.A,{groupId:"programming-language",children:[(0,o.jsxs)(i.A,{value:"python",label:"Python",children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",metastring:'title="custom_component.py"',children:"from random import random\n\nfrom std_msgs.msg import Float64\n"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",metastring:'title="custom_component.py"',children:'    def __init__(self, node_name: str, *args, **kwargs):\n        # ...\n        \n        self._random_number = random()\n        self.add_output("random_number", "_random_number", Float64)\n    \n    def on_step_callback():\n        self._random_number = random()\n'})})]}),(0,o.jsxs)(i.A,{value:"c++",label:"C++",children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="include/custom_component_package/CppComponent.hpp"',children:"class CppComponent : public modulo_components::Component {\npublic:\n  explicit CppComponent(const rclcpp::NodeOptions& options);\n\nprivate:\n  void on_step_callback() override;\n\n  std::shared_ptr<double> random_number_;\n};\n"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="src/CppComponent.cpp"',children:'// ...\n\n#include <random>\n\nstatic double generate_random_number() {\n    return static_cast<double>(rand()) / RAND_MAX;\n}\n\nCppComponent::CppComponent(const rclcpp::NodeOptions& options):\n    modulo_components::Component(options),\n    random_number_(std::make_shared<double>(this->generate_random_number())) {\n  // ...\n  \n  this->add_output("random_number", this->random_number_);\n}\n\nvoid CppComponent::on_step_callback() {\n  *this->random_number_ = this->generate_random_number();\n}\n'})})]})]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var a=t(6540);const o={},s=a.createContext(o);function r(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(s.Provider,{value:n},e.children)}},9329:(e,n,t)=>{t.d(n,{A:()=>r});t(6540);var a=t(8215);const o={tabItem:"tabItem_Ymn6"};var s=t(4848);function r(e){let{children:n,hidden:t,className:r}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(o.tabItem,r),hidden:t,children:n})}}}]);